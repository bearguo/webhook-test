name: Notify Slack on PR and Commits

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  notify-slack:
    runs-on: ubuntu-latest

    steps:
      - name: Validate PR title
        id: validate-title
        run: |
          if [[ ! "${{ github.event.pull_request.title }}" =~ CRM-[0-9]+ ]]; then
            echo "PR title does not match the required pattern."
            echo "::set-output name=valid::false"
            exit 1
          fi
          echo "::set-output name=valid::true"

      - name: Send Slack Notification on PR Opened
        if: ${{ github.event.action == 'opened' && steps.validate-title.outputs.valid == 'true' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_EVENT_PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
          GITHUB_EVENT_PULL_REQUEST_HTML_URL: ${{ github.event.pull_request.html_url }}
        run: |
          MESSAGE="üì¢ *New Pull Request Created*:\n- *Title*: ${GITHUB_EVENT_PULL_REQUEST_TITLE}\n- *Author*: ${GITHUB_ACTOR}\n- *URL*: ${GITHUB_EVENT_PULL_REQUEST_HTML_URL}"
          RESPONSE=$(curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" -H "Content-type: application/json" \
            --data "{\"channel\":\"$SLACK_CHANNEL_ID\",\"text\":\"$MESSAGE\"}" \
            https://slack.com/api/chat.postMessage)
          echo "MESSAGE_TS=$(echo $RESPONSE | jq -r '.ts')" >> slack-thread-ts.txt

      - name: Save Slack Thread Timestamp to Cache
        if: ${{ github.event.action == 'opened' && steps.validate-title.outputs.valid == 'true' }}
        id: save-cache
        uses: actions/cache/save@v4
        with:
          path: slack-thread-ts.txt
          key: slack-thread-ts-${{ github.event.pull_request.number }}


      - name: Restore Slack Thread Timestamp from Cache
        id: restore-cache
        if: ${{ github.event.action == 'synchronize' && steps.validate-title.outputs.valid == 'true' }}
        uses: actions/cache/restore@v4
        with:
          path: slack-thread-ts.txt
          key: slack-thread-ts-${{ github.event.pull_request.number }}

      - name: Load Slack Thread Timestamp
        if: ${{ github.event.action == 'synchronize' && steps.restore-cache.outputs.cache-hit == 'true' && steps.validate-title.outputs.valid == 'true' }}
        id: load-cache
        run: echo "SLACK_THREAD_TS=$(cat slack-thread-ts.txt)" >> $GITHUB_ENV

      - name: Add Reply for New Commits
        if: ${{ github.event.action == 'synchronize' && steps.validate-title.outputs.valid == 'true' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_THREAD_TS: ${{ env.SLACK_THREAD_TS }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          MESSAGE="üõ†Ô∏è *New Commits Pushed to PR #$PR_NUMBER*"
          curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" -H "Content-type: application/json" \
            --data "{\"channel\":\"$SLACK_CHANNEL_ID\",\"thread_ts\":\"$SLACK_THREAD_TS\",\"text\":\"$MESSAGE\"}" \
            https://slack.com/api/chat.postMessage