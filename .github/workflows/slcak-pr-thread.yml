name: Notify Slack on PR and Commits

on:
  pull_request:
    types:
      - opened
      - synchronize # PR 有新 Commit 时触发

jobs:
  notify-slack:
    runs-on: ubuntu-latest

    steps:
      - name: Set up environment variables
        id: set-vars
        run: echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Send Slack Notification on PR Opened
        if: ${{ github.event.action == 'opened' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        run: |
          MESSAGE="📢 *New Pull Request Created*:\n- *Title*: ${GITHUB_EVENT_PULL_REQUEST_TITLE}\n- *Author*: ${GITHUB_ACTOR}\n- *URL*: ${GITHUB_EVENT_PULL_REQUEST_HTML_URL}"
          RESPONSE=$(curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" -H "Content-type: application/json" \
            --data "{\"channel\":\"$SLACK_CHANNEL_ID\",\"text\":\"$MESSAGE\"}" \
            https://slack.com/api/chat.postMessage)
          echo "MESSAGE_TS=$(echo $RESPONSE | jq -r '.ts')" >> $GITHUB_ENV
          echo "SLACK_THREAD_TS=${{ env.MESSAGE_TS }}" >> $GITHUB_ENV

      - name: Add Reply for New Commits
        if: ${{ github.event.action == 'synchronize' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_THREAD_TS: ${{ env.SLACK_THREAD_TS }}
        run: |
          COMMITS=$(jq -r '.commits[].message' <<<"${{ github.event.pull_request }}" | sed 's/^/- /')
          MESSAGE="🛠️ *New Commits Pushed to PR #${{ env.PR_NUMBER }}*:\n$COMMITS"
          curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" -H "Content-type: application/json" \
            --data "{\"channel\":\"$SLACK_CHANNEL_ID\",\"thread_ts\":\"$SLACK_THREAD_TS\",\"text\":\"$MESSAGE\"}" \
            https://slack.com/api/chat.postMessage